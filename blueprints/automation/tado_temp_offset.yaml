blueprint:
  name: Advanced Tado Temperature Control
  description: |
    This blueprint provides advanced temperature control for Tado smart valves, with features such as dynamic threshold adjustment, adaptive learning, and multi-zone support.
    
    **Change Log:**
    - Added advanced temperature control features.
    - Implemented dynamic threshold adjustment based on outdoor temperature.
    - Introduced adaptive learning capabilities.
    - Enabled multi-zone support.
    - Updated source URL for direct editing on GitHub.
    
  domain: automation
  input:
    outdoor_temperature_sensor:
      name: Outdoor Temperature Sensor
      description: The sensor provides outdoor temperature data for dynamic threshold adjustment.
      selector:
        entity:
          domain: sensor
          device_class: temperature
          multiple: false
        instruction: Select the sensor that provides outdoor temperature data.

    zones:
      name: Zones
      description: List of zones to control with their respective temperature sensors and Tado devices.
      selector:
        entity:
          domain: group
      multiple: true
      instruction: Select the groups that represent the zones to control. Each group should contain both a temperature sensor and a Tado device.

  source_url: https://github.com/Crash-Evans/homeassistant/blob/main/blueprints/automation/tado_temp_offset.yaml

variables:
  heating_threshold: >-
    {%- set base_threshold = 25 %}
    {%- set outdoor_temp = state_attr(outdoor_temperature_sensor, "temperature") | float %}
    {{ base_threshold - (outdoor_temp / 10) }}

trigger:
  - platform: time_pattern
    minutes: "/15"

condition: []

action:
  - repeat:
      count: "{{ expand(zones) | length }}"
      sequence:
        - variables:
            zone: "{{ expand(zones)[repeat.index] }}"
          choose:
            - conditions: "{{ zone.name }}_learning_enabled is defined and {{ zone.name }}_learning_enabled == true"
              sequence:
                - service: script.train_temperature_prediction_model
                  data:
                    zone: "{{ zone.name }}"
                    temperature_sensor: "{{ state_attr(zone, 'temperature_sensor') }}"
                    tado_device: "{{ state_attr(zone, 'tado_device') }}"
                - service: script.adjust_heating_threshold
                  data:
                    zone: "{{ zone.name }}"
                    outdoor_temperature_sensor: "{{ outdoor_temperature_sensor }}"
                    heating_threshold: "{{ heating_threshold }}"
            - conditions: "{{ zone.name }}_learning_enabled is undefined or {{ zone.name }}_learning_enabled == false"
              sequence:
                - service: climate.set_temperature
                  target:
                    entity_id: "{{ state_attr(zone, 'tado_device') }}"
                  data:
                    temperature: "{{ state_attr(zone, 'desired_temperature') }}"

metadata:
  version: "2.0"
